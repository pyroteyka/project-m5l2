import telebot
from config import *
from logic import *

bot = telebot.TeleBot(TOKEN)

@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –≥–æ—Ä–æ–¥–∞ –Ω–∞ –∫–∞—Ä—Ç–µ. –ù–∞–ø–∏—à–∏ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.")

@bot.message_handler(commands=['help'])
def handle_help(message):
    bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:  `/start` - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º –∏ –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ."
    "`/help` - –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."
    "`/show_city <city_name>` - –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥ –Ω–∞ –∫–∞—Ä—Ç–µ."
    "`/remember_city <city_name>` - —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≥–æ—Ä–æ–¥ –≤ —Å–ø–∏—Å–æ–∫ –∏–∑–±—Ä–∞–Ω–Ω—ã—Ö."
    "`/show_my_cities` - –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –≥–æ—Ä–æ–¥–∞.")
    # –î–æ–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞


@bot.message_handler(commands=['show_city'])
def handle_show_city(message):
    city_name = message.text.split()[-1]
    mapper = DB_Map(db_path='database.db')

def show_city(update, context):
    """
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –∫–∞—Ä—Ç–µ –æ–¥–∏–Ω –≥–æ—Ä–æ–¥ –∏ –µ–≥–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–æ–º–∞–Ω–¥–∞ /show_city <–≥–æ—Ä–æ–¥>.
    """
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    args = context.args
    if not args:
        update.message.reply_text("üìù –£–∫–∞–∂–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞: /show_city <–≥–æ—Ä–æ–¥>")
        return

    city = " ".join(args).title()  # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∫–∞–ø–∏—Ç–∞–ª–∏–∑–∞—Ü–∏—é

    # –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    coords = mapper.get_coordinates(city)
    if not coords:
        update.message.reply_text(f"‚ùå –ù–µ –Ω–∞—à—ë–ª –≥–æ—Ä–æ–¥ ¬´{city}¬ª –≤ –±–∞–∑–µ.")
        return

    lat, lon = coords

    # –°–æ–∑–¥–∞—ë–º –∫–∞—Ä—Ç—É —Å –æ–¥–Ω–∏–º –º–∞—Ä–∫–µ—Ä–æ–º
    img_path = f'/tmp/city_{update.effective_user.id}_{city}.png'
    mapper.create_graph(img_path, [city])

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç—É
    with open(img_path, 'rb') as f:
        update.message.reply_photo(f, caption=f"üìç –ì–æ—Ä–æ–¥: {city}\n–®–∏—Ä–æ—Ç–∞: {lat:.4f}, –î–æ–ª–≥–æ—Ç–∞: {lon:.4f}")



@bot.message_handler(commands=['remember_city'])
def handle_remember_city(message):
    user_id = message.chat.id
    city_name = message.text.split()[-1]
    if manager.add_city(user_id, city_name):
        bot.send_message(message.chat.id, f'–ì–æ—Ä–æ–¥ {city_name} —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!')
    else:
        bot.send_message(message.chat.id, '–¢–∞–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞ —è –Ω–µ –∑–Ω–∞—é. –£–±–µ–¥–∏—Å—å, —á—Ç–æ –æ–Ω –Ω–∞–ø–∏—Å–∞–Ω –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–æ–º!')

@bot.message_handler(commands=['show_my_cities'])
def handle_show_visited_cities(message):
    cities = manager.select_cities(message.chat.id)
    # –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, –µ—Å—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä mapper
mapper = DB_Map(db_path='database.db')  # –∏–ª–∏ –∫–∞–∫ —É –≤–∞—Å —É—Å—Ç—Ä–æ–µ–Ω–æ

def show_my_cities(update, context):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /show_my_cities.
    """
    user_id = update.effective_user.id

    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≥–æ—Ä–æ–¥–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –ë–î
    conn = mapper.conn  # –ª–∏–±–æ –ø–æ-–¥—Ä—É–≥–æ–º—É
    cur = conn.cursor()
    cur.execute("SELECT city FROM user_cities WHERE user_id = ?", (user_id,))
    rows = cur.fetchall()
    if not rows:
        update.message.reply_text("–£ —Ç–µ–±—è –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã—Ö –≥–æ—Ä–æ–¥–æ–≤. –î–æ–±–∞–≤—å —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /add_city <–Ω–∞–∑–≤–∞–Ω–∏–µ>.")
        return

    cities = [row[0] for row in rows]
    cities_text = "\n".join(f"‚Ä¢ {c}" for c in cities)

    # 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
    update.message.reply_text(f"–í–æ—Ç —Ç–≤–æ–∏ –≥–æ—Ä–æ–¥–∞:\n{cities_text}")

    # 2. –°—Ç—Ä–æ–∏–º –∫–∞—Ä—Ç—É
    img_path = f'/tmp/my_cities_{user_id}.png'
    mapper.create_graph(img_path, cities)

    # 3. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    with open(img_path, 'rb') as f:
        update.message.reply_photo(f, caption="–¢–≤–æ—è –∫–∞—Ä—Ç–∞ —Å –≥–æ—Ä–æ–¥–∞–º–∏ üìç")



if __name__=="__main__":
    manager = DB_Map(DATABASE)
    bot.polling()
